  In file included from Face.cpp:2:
./Mesh3D.h(29,19): warning : inline function 'conv::Mesh3D<double>::getVertex' is not defined [-Wundefined-inline]
Face.cpp(25,17): message : used here
lld-link : error : undefined symbol: public: class conv::Vertex<double> __thiscall conv::Mesh3D<double>::getVertex(unsigned __int64) const
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:25
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:26
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:27
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:44
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:45
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:46
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:64
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:65
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:66
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  
lld-link : error : undefined symbol: public: class conv::Vertex<double> & __thiscall conv::Vertex<double>::operator-(class conv::Vertex<double> const &)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:29
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:30
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:48
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:49
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:68
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:69
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  
lld-link : error : undefined symbol: public: double __thiscall conv::Vertex<double>::getPos_Y(void) const
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:32
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:32
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:34
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:34
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:51
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:51
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:53
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:53
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:72
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:72
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  
lld-link : error : undefined symbol: public: double __thiscall conv::Vertex<double>::getPos_Z(void) const
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:32
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:32
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:33
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:33
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:51
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:51
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:52
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:52
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:73
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:73
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  
lld-link : error : undefined symbol: public: double __thiscall conv::Vertex<double>::getPos_X(void) const
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:33
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:33
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:34
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:34
  >>>               Debug\Face.obj:(public: double __thiscall conv::Face::area(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:52
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:52
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:53
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:53
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::normal(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:71
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
  >>> referenced by C:\Users\Nadir\source\Shapr3d\3DConverter\Face.cpp:71
  >>>               Debug\Face.obj:(public: class std::array<double, 3> __thiscall conv::Face::center(class conv::Mesh3D<double> const &) const)
